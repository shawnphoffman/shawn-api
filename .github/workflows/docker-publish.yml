name: Next.js Docker Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (specify the version you're using)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify your Node.js version
          cache: "yarn"

      # Step 3: Authenticate to GitHub Packages for pulling private GitHub packages
      - name: Authenticate to GitHub Packages
        run: |
          echo "@shawnphoffman:registry=https://npm.pkg.github.com/" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      # Step 4: Install dependencies with Yarn (including private GitHub packages)
      - name: Install dependencies
        run: yarn install

      # Step 5: Build the Next.js project (App Router)
      - name: Build Next.js app
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          PUPPETEER_WSS: ${{ secrets.PUPPETEER_WSS }}
          SANITY_REVALIDATE_SECRET: ${{ secrets.SANITY_REVALIDATE_SECRET }}
          # Add any other environment variables you need
        run: yarn build
          

      # Step 6: Log in to GitHub Container Registry (ghcr.io) to push Docker image
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Step 7: Build the Docker image
      - name: Build Docker image
        run: |
          docker build --pull --no-cache -t ghcr.io/${{ github.repository }}/nextjs-app:latest .

      # Step 8: Push the Docker image to GitHub Container Registry (ghcr.io)
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}/nextjs-app:latest
